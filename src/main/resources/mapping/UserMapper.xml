<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.chinaos.dao.UserMapper">
    <resultMap id="BaseResultMap" type="org.chinaos.model.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="enable" property="enable" jdbcType="VARCHAR"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="credentials" property="credentials" jdbcType="VARCHAR"/>
        <result column="locked" property="locked" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <result column="last_time" property="lastTime" jdbcType="VARCHAR"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, email, username, password, enable, account, credentials, locked,create_time,last_time, salt
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getAllByPage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="org.chinaos.model.User">
        insert into user (id, email, username,
        password, enable, account,
        credentials, locked, create_time,
        last_time, salt)
        values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR}, #{enable,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR},
        #{credentials,jdbcType=VARCHAR}, #{locked,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{lastTime,jdbcType=TIMESTAMP}, #{salt,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="org.chinaos.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="email != null">
                email,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="enable != null">
                enable,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="credentials != null">
                credentials,
            </if>
            <if test="locked != null">
                locked,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="lastTime != null">
                last_time,
            </if>
            <if test="salt != null">
                salt,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="enable != null">
                #{enable,jdbcType=VARCHAR},
            </if>
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="credentials != null">
                #{credentials,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                #{locked,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastTime != null">
                #{lastTime,jdbcType=TIMESTAMP},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
        </trim>
        on duplicate key update username=values(username)
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.chinaos.model.User">
        update user
        <set>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="enable != null">
                enable = #{enable,jdbcType=VARCHAR},
            </if>
            <if test="account != null">
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="credentials != null">
                credentials = #{credentials,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                locked = #{locked,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastTime != null">
                last_time = #{lastTime,jdbcType=TIMESTAMP},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.chinaos.model.User">
        update user
        set email = #{email,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        enable = #{enable,jdbcType=VARCHAR},
        account = #{account,jdbcType=VARCHAR},
        credentials = #{credentials,jdbcType=VARCHAR},
        locked = #{locked,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        last_time = #{lastTime,jdbcType=TIMESTAMP},
        salt = #{salt,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="loadUserByUsername" resultType="User" parameterType="String">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{username,jdbcType=VARCHAR}
    </select>
</mapper>