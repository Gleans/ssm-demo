<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--读取db.properties-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 配置扫描@Service注解 -->
    <context:component-scan base-package="org.chinaos.service"/>

    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--数据库驱动-->
        <property name="driverClassName" value="${dataSource.driver}"/>
        <!--连接数据库的url-->
        <property name="url" value="${dataSource.url}"/>
        <!--连接数据库的用户名-->
        <property name="username" value="${dataSource.username}"/>
        <!--连接数据库的密码-->
        <property name="password" value="${dataSource.password}"/>
        <!--最大连接数-->
        <property name="maxActive" value="${dataSource.maxActive}"/>
        <!--初始化连接数-->
        <property name="initialSize" value="${dataSource.initialSize}"/>
    </bean>

    <!--配置MyBatis工厂SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--指定mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mapping/*.xml"/>
        <!--指定MyBatis的核心配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    <!-- 接口开发,扫描 com.itheima.core.dao包 ，写在此包下的接口即可被扫描到 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.chinaos.dao"/>
    </bean>


    <import resource="spring-security.xml"/>

    <!-- Transaction manager ：
	非JTA事务（即非分布式事务）， 事务配置的时候 ，事务管理器(transactionManager)需要指定dataSource属性（非分布式事务，事务是在数据库创建的链接上开启。）
	JTA事务（分布式事务）， 事务配置的时候 ，事务管理器(transactionManager)不能指定dataSource属性（分布式事务，是有全局事务来管理数据库链接的）
	-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 使用注解annotation定义事务：
    如果 "proxy-target-class" 属值被设置为 "true"，那么基于类的代理将起作用（这时需要CGLIB库cglib.jar在CLASSPATH中）。
    如果 "proxy-target-class" 属值被设置为 "false" 或者这个属性被省略，那么标准的JDK基于接口的代理将起作用。
    -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />


</beans>